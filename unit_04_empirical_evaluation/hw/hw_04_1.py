"""
Проанализировать скорость и сложность одного любого алгоритма
из разработанных в рамках домашнего задания первых трех уроков.

Модуль-2 задача-3
3. Сформировать из введенного числа обратное по порядку входящих в него цифр
и вывести на экран. Например, если введено число 3486, надо вывести 6843.
"""

import cProfile


# алгоритм из ДЗ
def reverse_hw(x):
    tmp = ''
    while x != 0:
        tmp += str(x % 10)
        x //= 10
    return int(tmp)


# алгоритм из разбора ДЗ
def reverse_num(x):
    tmp = ''
    for i in str(x):
        tmp = i + tmp
    return tmp


# использование "коробочного" разворота строки
def reverse_builtin(x):
    return int(str(x)[::-1])

# reverse_hw(100000000000002)
# 1000 loops, best of 5: 2.67 usec per loop
#
# reverse_num(100000000000002)
# 1000 loops, best of 5: 1.51 usec per loop
#
# reverse_builtin(100000000000002)
# 1000 loops, best of 5: 611 nsec per loop


# вывод: встроенная функция разворота выполняется на порядок быстрее;
# самодельные функции одного порядка, но проход в цикле символам строки немного быстрее,
# чем арифметические операции деления и взятия остаткуа по модулю в том же цикле
